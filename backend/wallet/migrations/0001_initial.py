# Generated by Django 5.2.5 on 2025-08-27 13:17

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('listings', '0005_listing_image_2_listing_image_3_listing_image_4'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommissionRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rule_type', models.CharField(choices=[('platform_fee', 'Platform Fee'), ('agent_commission', 'Agent Commission'), ('referral_bonus', 'Referral Bonus'), ('listing_fee', 'Listing Fee'), ('transaction_fee', 'Transaction Fee')], max_length=20)),
                ('applies_to', models.CharField(choices=[('all', 'All Transactions'), ('reservations', 'Reservations'), ('payments', 'Payments'), ('payouts', 'Payouts'), ('listings', 'Listings')], default='all', max_length=20)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('fixed_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tiered_structure', models.JSONField(blank=True, default=dict, help_text='Tiered commission structure based on amount ranges')),
                ('min_transaction_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('max_transaction_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('target_conditions', models.JSONField(blank=True, default=dict, help_text='Additional conditions for rule application')),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.PositiveIntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PayoutProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('supported_methods', models.JSONField(default=list, help_text='List of supported payout methods')),
                ('supported_currencies', models.JSONField(default=list, help_text='List of supported currencies')),
                ('fee_structure', models.JSONField(default=dict, help_text='Fee calculation structure')),
                ('min_payout_amount', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=10)),
                ('max_payout_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=25)),
                ('kyc_status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('kyc_documents', models.JSONField(blank=True, default=dict)),
                ('kyc_verified_at', models.DateTimeField(blank=True, null=True)),
                ('payout_method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('mobile_money', 'Mobile Money'), ('paypal', 'PayPal'), ('crypto', 'Cryptocurrency')], max_length=20)),
                ('payout_details', models.JSONField(default=dict, help_text='Method-specific payout details (account numbers, addresses, etc.)')),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiaries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CurrencyExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_currency', models.CharField(max_length=3)),
                ('to_currency', models.CharField(max_length=3)),
                ('rate', models.DecimalField(decimal_places=6, max_digits=12)),
                ('provider', models.CharField(choices=[('manual', 'Manual Entry'), ('xe', 'XE.com'), ('fixer', 'Fixer.io'), ('openexchange', 'Open Exchange Rates')], default='manual', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['from_currency', 'to_currency'], name='wallet_curr_from_cu_628d2f_idx'), models.Index(fields=['expires_at'], name='wallet_curr_expires_cfa010_idx')],
                'unique_together': {('from_currency', 'to_currency', 'provider')},
            },
        ),
        migrations.CreateModel(
            name='InvestmentPool',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('current_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('min_investment', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=10)),
                ('max_investment', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('expected_return_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('investment_period_months', models.PositiveIntegerField(default=12)),
                ('status', models.CharField(choices=[('open', 'Open for Investment'), ('funding', 'Funding in Progress'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('funding_deadline', models.DateTimeField(blank=True, null=True)),
                ('listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='investment_pools', to='listings.listing')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(max_length=3)),
                ('returns_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('last_return_payment', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('withdrawn', 'Withdrawn'), ('completed', 'Completed')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('withdrawn_at', models.DateTimeField(blank=True, null=True)),
                ('investor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investments', to=settings.AUTH_USER_MODEL)),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investments', to='wallet.investmentpool')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('wallet_type', models.CharField(choices=[('user', 'User Wallet'), ('agency', 'Agency Wallet'), ('escrow', 'Escrow Wallet'), ('platform', 'Platform Wallet')], default='user', max_length=20)),
                ('balance_cached', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('is_frozen', models.BooleanField(default=False)),
                ('freeze_reason', models.CharField(blank=True, max_length=200)),
                ('daily_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Daily transaction limit', max_digits=12, null=True)),
                ('monthly_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Monthly transaction limit', max_digits=12, null=True)),
                ('requires_2fa', models.BooleanField(default=False)),
                ('pin_hash', models.CharField(blank=True, max_length=128)),
                ('last_activity_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_agency', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agency_wallet', to='users.profile')),
                ('owner_user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SecurityAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('large_transaction', 'Large Transaction'), ('unusual_pattern', 'Unusual Pattern'), ('multiple_failures', 'Multiple Failed Attempts'), ('new_device', 'New Device Access'), ('location_change', 'Location Change'), ('rapid_transactions', 'Rapid Transactions')], max_length=30)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('alert_data', models.JSONField(blank=True, default=dict)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_security_alerts', to=settings.AUTH_USER_MODEL)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_alerts', to='wallet.wallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SavingsGoal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('current_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('currency', models.CharField(max_length=3)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('auto_save_enabled', models.BooleanField(default=False)),
                ('auto_save_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('auto_save_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10, null=True)),
                ('last_auto_save', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='savings_goals', to='wallet.wallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(max_length=3)),
                ('fee_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('paid', 'Paid'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('provider_ref', models.CharField(blank=True, max_length=128)),
                ('failure_reason', models.TextField(blank=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_payouts', to=settings.AUTH_USER_MODEL)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payouts', to='wallet.beneficiary')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to='wallet.wallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LedgerEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entry_type', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(max_length=3)),
                ('ref_type', models.CharField(help_text='Type of transaction (payment, transfer, etc.)', max_length=50)),
                ('ref_id', models.CharField(help_text='ID of the source transaction', max_length=128)),
                ('txid', models.UUIDField(help_text='Transaction ID for grouping related entries')),
                ('description', models.CharField(max_length=500)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ledger_entries', to='wallet.wallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WalletAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('opening_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('closing_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_credits', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total_debits', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('transaction_count', models.PositiveIntegerField(default=0)),
                ('largest_transaction', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='wallet.wallet')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('transfer', 'Wallet Transfer'), ('payment', 'Payment'), ('refund', 'Refund'), ('commission', 'Commission'), ('fee', 'Fee'), ('escrow_hold', 'Escrow Hold'), ('escrow_release', 'Escrow Release')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('reference', models.CharField(max_length=128, unique=True)),
                ('description', models.CharField(max_length=500)),
                ('external_ref', models.CharField(blank=True, max_length=128)),
                ('related_object_type', models.CharField(blank=True, max_length=50)),
                ('related_object_id', models.CharField(blank=True, max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('from_wallet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transactions', to='wallet.wallet')),
                ('to_wallet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transactions', to='wallet.wallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='beneficiary',
            index=models.Index(fields=['owner', 'is_active'], name='wallet_bene_owner_i_a88103_idx'),
        ),
        migrations.AddIndex(
            model_name='beneficiary',
            index=models.Index(fields=['kyc_status'], name='wallet_bene_kyc_sta_664e04_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='investment',
            unique_together={('pool', 'investor')},
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['owner_user'], name='wallet_wall_owner_u_6e6ebc_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['owner_agency'], name='wallet_wall_owner_a_b85c82_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['wallet_type', 'is_active'], name='wallet_wall_wallet__cfb673_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['currency'], name='wallet_wall_currenc_81c38b_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['wallet', 'is_resolved'], name='wallet_secu_wallet__ba65b5_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['alert_type', 'severity'], name='wallet_secu_alert_t_5e3ca6_idx'),
        ),
        migrations.AddIndex(
            model_name='payout',
            index=models.Index(fields=['wallet', 'status'], name='wallet_payo_wallet__26d51e_idx'),
        ),
        migrations.AddIndex(
            model_name='payout',
            index=models.Index(fields=['beneficiary', 'status'], name='wallet_payo_benefic_03d645_idx'),
        ),
        migrations.AddIndex(
            model_name='payout',
            index=models.Index(fields=['status', 'created_at'], name='wallet_payo_status_94f7d5_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerentry',
            index=models.Index(fields=['wallet', 'created_at'], name='wallet_ledg_wallet__9a50b7_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerentry',
            index=models.Index(fields=['ref_type', 'ref_id'], name='wallet_ledg_ref_typ_e41c09_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerentry',
            index=models.Index(fields=['txid'], name='wallet_ledg_txid_3eb535_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerentry',
            index=models.Index(fields=['entry_type', 'currency'], name='wallet_ledg_entry_t_330e57_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='walletanalytics',
            unique_together={('wallet', 'date')},
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['from_wallet', 'status'], name='wallet_wall_from_wa_fd7687_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['to_wallet', 'status'], name='wallet_wall_to_wall_b23208_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['reference'], name='wallet_wall_referen_b8b9fb_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['related_object_type', 'related_object_id'], name='wallet_wall_related_4f6dce_idx'),
        ),
    ]
