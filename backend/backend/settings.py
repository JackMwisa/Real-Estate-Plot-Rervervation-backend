"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

"""
Django settings for backend project.
"""

import os
from pathlib import Path
from dotenv import load_dotenv

BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv()

SECRET_KEY = "django-insecure-your-secret-key-here"
DEBUG = True

# Your app runs on localhost in dev
ALLOWED_HOSTS = ["localhost", "127.0.0.1"]

# -----------------------------------------------------------------------------
# Applications
# -----------------------------------------------------------------------------
INSTALLED_APPS = [
    "jazzmin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Third-party
    "rest_framework",
    "rest_framework.authtoken",
    "djoser",
    "corsheaders",                 # <-- required for CORS

    "django_filters",

    # Local apps
    "users",
    "listings",
    "payments",
    "notifications",
    "search",
    "tours",
    "visits",
    "bookings",
    "wallet",
    "ads",
    "verification",
]

# -----------------------------------------------------------------------------
# Middleware (CORS middleware should be at the very top)
# -----------------------------------------------------------------------------
MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",   # <-- keep first
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"

# -----------------------------------------------------------------------------
# Database (dev)
# -----------------------------------------------------------------------------
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# -----------------------------------------------------------------------------
# Password validation
# -----------------------------------------------------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# -----------------------------------------------------------------------------
# i18n / tz
# -----------------------------------------------------------------------------
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Africa/Kampala"
USE_I18N = True
USE_TZ = True

# -----------------------------------------------------------------------------
# Static & Media
# -----------------------------------------------------------------------------
STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = "users.User"

# -----------------------------------------------------------------------------
# DRF
# -----------------------------------------------------------------------------
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticatedOrReadOnly",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 20,
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.SearchFilter",
        "rest_framework.filters.OrderingFilter",
    ],
}

# -----------------------------------------------------------------------------
# Djoser
# -----------------------------------------------------------------------------
DJOSER = {
    "SERIALIZERS": {
        "user_create": "djoser.serializers.UserCreateSerializer",
        "user": "djoser.serializers.UserSerializer",
    },
    "SEND_ACTIVATION_EMAIL": False,
    "SEND_CONFIRMATION_EMAIL": False,
}

# -----------------------------------------------------------------------------
# CORS (single, correct section)
# -----------------------------------------------------------------------------
# If you need cookies/session across origins, keep credentials True and list
# explicit origins (cannot use '*').
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",        # Vite dev server
    "http://127.0.0.1:5173",
    "http://localhost:3000",        # (optional) CRA
    "http://127.0.0.1:3000",
]

# For CSRF-protected POST/PUT from these origins (Django 5 requires scheme)
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

# -----------------------------------------------------------------------------
# Email (dev placeholders)
# -----------------------------------------------------------------------------
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER", "")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD", "")

# -----------------------------------------------------------------------------
# Payments & feature flags (unchanged)
# -----------------------------------------------------------------------------
FLUTTERWAVE_PUBLIC_KEY = os.getenv("FLUTTERWAVE_PUBLIC_KEY", "")
FLUTTERWAVE_SECRET_KEY = os.getenv("FLUTTERWAVE_SECRET_KEY", "")
FLUTTERWAVE_ENCRYPTION_KEY = os.getenv("FLUTTERWAVE_ENCRYPTION_KEY", "")

PAYPAL_CLIENT_ID = os.getenv("PAYPAL_CLIENT_ID", "")
PAYPAL_SECRET_KEY = os.getenv("PAYPAL_SECRET_KEY", "")
PAYPAL_ENVIRONMENT = os.getenv("PAYPAL_ENVIRONMENT", "sandbox")

BASE_URL = os.getenv("BASE_URL", "http://localhost:8000")

BOOKINGS_ENABLED = os.getenv("BOOKINGS_ENABLED", "true").lower() == "true"
WALLET_ENABLED = os.getenv("WALLET_ENABLED", "true").lower() == "true"
ADS_ENABLED = os.getenv("ADS_ENABLED", "true").lower() == "true"
TOURS_ENABLED = os.getenv("TOURS_ENABLED", "true").lower() == "true"
VERIFICATION_ENABLED = os.getenv("VERIFICATION_ENABLED", "true").lower() == "true"

SEARCH_MAX_PAGE_SIZE = 50
SEARCH_DEFAULT_SORT = "relevance"
SEARCH_RANK_WEIGHTS = {"text_relevance": 1.0, "freshness": 0.3, "verified": 0.2, "media_richness": 0.1, "distance": 0.4}
ADS_RANK_BLEND_WEIGHTS = {"organic_score": 0.7, "boost_score": 0.3}

WALLET_LARGE_TRANSACTION_THRESHOLD = 1000.00
PAYOUT_APPROVAL_THRESHOLD = 500.00

FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024
DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024

SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = "DENY"

SESSION_COOKIE_AGE = 86400
SESSION_SAVE_EVERY_REQUEST = True

# -----------------------------------------------------------------------------
# Logging & Jazzmin (unchanged)
# -----------------------------------------------------------------------------
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "file": {"level": "INFO", "class": "logging.FileHandler", "filename": BASE_DIR / "django.log"},
        "console": {"level": "INFO", "class": "logging.StreamHandler"},
    },
    "loggers": {
        "django": {"handlers": ["file", "console"], "level": "INFO", "propagate": True},
        "wallet": {"handlers": ["file", "console"], "level": "INFO", "propagate": True},
        "bookings": {"handlers": ["file", "console"], "level": "INFO", "propagate": True},
    },
}

JAZZMIN_SETTINGS = {
    "site_title": "Real Estate Platform",
    "site_header": "Real Estate Admin",
    "site_brand": "Real Estate Platform",
    "site_logo": None,
    "login_logo": None,
    "login_logo_dark": None,
    "site_logo_classes": "img-circle",
    "site_icon": None,
    "welcome_sign": "Welcome to Real Estate Platform Administration",
    "copyright": "Real Estate Platform Ltd",
    "search_model": ["auth.User", "listings.Listing"],
    "user_avatar": None,
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "API Docs", "url": "/api/", "new_window": True},
        {"model": "auth.User"},
        {"app": "listings"},
    ],
    "usermenu_links": [
        {"name": "Support", "url": "https://github.com/your-repo/issues", "new_window": True},
        {"model": "auth.user"},
    ],
    "show_sidebar": True,
    "navigation_expanded": True,
    "order_with_respect_to": [
        "auth", "users", "listings", "visits", "bookings", "payments", "wallet",
        "ads", "tours", "verification", "notifications", "search"
    ],
    "custom_links": {
        "listings": [{"name": "View Listings", "url": "/api/listings/", "icon": "fas fa-home",
                      "permissions": ["listings.view_listing"]}],
        "wallet": [{"name": "Wallet Analytics", "url": "/api/wallet/analytics/", "icon": "fas fa-chart-line",
                    "permissions": ["wallet.view_wallet"]}],
    },
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "users.User": "fas fa-user",
        "users.Profile": "fas fa-id-card",
        "listings.Listing": "fas fa-home",
        "listings.Poi": "fas fa-map-marker-alt",
        "visits.VisitSlot": "fas fa-calendar-alt",
        "visits.Visit": "fas fa-handshake",
        "bookings.Reservation": "fas fa-bookmark",
        "bookings.DisputeCase": "fas fa-gavel",
        "payments.Payment": "fas fa-credit-card",
        "wallet.Wallet": "fas fa-wallet",
        "wallet.LedgerEntry": "fas fa-receipt",
        "wallet.Payout": "fas fa-money-bill-wave",
        "ads.AdPackage": "fas fa-tags",
        "ads.AdCampaign": "fas fa-bullhorn",
        "tours.TourAsset": "fas fa-vr-cardboard",
        "verification.VerificationCase": "fas fa-certificate",
        "notifications.Notification": "fas fa-bell",
        "search.SavedSearch": "fas fa-search",
    },
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",
    "related_modal_active": False,
    "custom_css": None,
    "custom_js": None,
    "show_ui_builder": False,
    "changeform_format": "horizontal_tabs",
    "changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs"},
    "language_chooser": False,
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-primary",
    "accent": "accent-primary",
    "navbar": "navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-primary",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success",
    },
}
