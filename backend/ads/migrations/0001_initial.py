# Generated by Django 5.2.5 on 2025-08-27 13:17

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdCampaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('target_type', models.CharField(choices=[('listing', 'Listing'), ('agency', 'Agency')], max_length=10)),
                ('target_id', models.PositiveIntegerField(help_text='ID of the listing or agency being promoted')),
                ('start_at', models.DateTimeField()),
                ('end_at', models.DateTimeField()),
                ('budget', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('1.00'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('spent_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('boost_score', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)])),
                ('impressions', models.PositiveIntegerField(default=0)),
                ('clicks', models.PositiveIntegerField(default=0)),
                ('conversions', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_campaigns', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ad_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdImpression',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(blank=True, max_length=128)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('page_url', models.URLField(blank=True)),
                ('search_query', models.CharField(blank=True, max_length=500)),
                ('position', models.PositiveIntegerField(blank=True, help_text='Position in search results', null=True)),
                ('cost', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impression_events', to='ads.adcampaign')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdClick',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(blank=True, max_length=128)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('clicked_url', models.URLField()),
                ('referrer_url', models.URLField(blank=True)),
                ('cost', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='click_events', to='ads.adcampaign')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('impression', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='click', to='ads.adimpression')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdMetricsRollup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('impressions', models.PositiveIntegerField(default=0)),
                ('clicks', models.PositiveIntegerField(default=0)),
                ('conversions', models.PositiveIntegerField(default=0)),
                ('spend', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_metrics', to='ads.adcampaign')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='AdPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('sku', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('duration_days', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(365)])),
                ('pricing_model', models.CharField(choices=[('flat', 'Flat Rate'), ('cpm', 'Cost Per Mille (CPM)'), ('cpc', 'Cost Per Click (CPC)')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('geo_scope', models.CharField(choices=[('global', 'Global'), ('country', 'Country'), ('region', 'Region'), ('city', 'City')], default='global', max_length=20)),
                ('max_boost_score', models.FloatField(default=1.0, help_text='Maximum boost multiplier for search ranking', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)])),
                ('featured_placement', models.BooleanField(default=False)),
                ('priority_support', models.BooleanField(default=False)),
                ('analytics_access', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['price'],
                'indexes': [models.Index(fields=['is_active', 'geo_scope'], name='ads_adpacka_is_acti_71cde7_idx'), models.Index(fields=['pricing_model'], name='ads_adpacka_pricing_4167de_idx')],
            },
        ),
        migrations.AddField(
            model_name='adcampaign',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaigns', to='ads.adpackage'),
        ),
        migrations.AddIndex(
            model_name='adimpression',
            index=models.Index(fields=['campaign', 'created_at'], name='ads_adimpre_campaig_ed4b2c_idx'),
        ),
        migrations.AddIndex(
            model_name='adimpression',
            index=models.Index(fields=['user', 'created_at'], name='ads_adimpre_user_id_20e7db_idx'),
        ),
        migrations.AddIndex(
            model_name='adimpression',
            index=models.Index(fields=['session_id', 'created_at'], name='ads_adimpre_session_11ac15_idx'),
        ),
        migrations.AddIndex(
            model_name='adclick',
            index=models.Index(fields=['campaign', 'created_at'], name='ads_adclick_campaig_448140_idx'),
        ),
        migrations.AddIndex(
            model_name='adclick',
            index=models.Index(fields=['user', 'created_at'], name='ads_adclick_user_id_885542_idx'),
        ),
        migrations.AddIndex(
            model_name='adclick',
            index=models.Index(fields=['session_id', 'created_at'], name='ads_adclick_session_b95d23_idx'),
        ),
        migrations.AddIndex(
            model_name='admetricsrollup',
            index=models.Index(fields=['campaign', 'date'], name='ads_admetri_campaig_fb74b4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='admetricsrollup',
            unique_together={('campaign', 'date')},
        ),
        migrations.AddIndex(
            model_name='adcampaign',
            index=models.Index(fields=['owner', 'status'], name='ads_adcampa_owner_i_5447f2_idx'),
        ),
        migrations.AddIndex(
            model_name='adcampaign',
            index=models.Index(fields=['status', 'start_at', 'end_at'], name='ads_adcampa_status_76122a_idx'),
        ),
        migrations.AddIndex(
            model_name='adcampaign',
            index=models.Index(fields=['target_type', 'target_id'], name='ads_adcampa_target__24cd42_idx'),
        ),
    ]
