# Generated by Django 5.2.5 on 2025-08-27 13:17

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('listings', '0005_listing_image_2_listing_image_3_listing_image_4'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('confirmed', 'Confirmed'), ('checked_in', 'Checked In'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='requested', max_length=20)),
                ('selected_tour_type', models.CharField(choices=[('onsite', 'On-site Visit'), ('virtual', 'Virtual Tour')], default='onsite', max_length=10)),
                ('booking_intent', models.CharField(choices=[('viewing', 'Just Viewing'), ('interested', 'Interested in Renting'), ('serious', 'Serious About Buying'), ('comparing', 'Comparing Options')], default='viewing', max_length=20)),
                ('budget_range', models.CharField(blank=True, max_length=50)),
                ('move_in_date', models.DateField(blank=True, null=True)),
                ('visitor_count', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('special_requests', models.TextField(blank=True)),
                ('fee_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('fee_paid', models.BooleanField(default=False)),
                ('payment_reference', models.CharField(blank=True, max_length=128)),
                ('checkin_code', models.CharField(blank=True, max_length=8)),
                ('checkin_at', models.DateTimeField(blank=True, null=True)),
                ('checkin_location', models.JSONField(blank=True, null=True)),
                ('virtual_tour_accessed_at', models.DateTimeField(blank=True, null=True)),
                ('virtual_tour_duration', models.PositiveIntegerField(blank=True, help_text='Duration in seconds', null=True)),
                ('proof_photo', models.ImageField(blank=True, null=True, upload_to='visit_proofs/%Y/%m/%d/')),
                ('buyer_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('buyer_feedback', models.TextField(blank=True)),
                ('agent_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to=settings.AUTH_USER_MODEL)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='listings.listing')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DirectBookingInquiry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('responded', 'Responded'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('offered_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('proposed_terms', models.TextField(blank=True)),
                ('buyer_message', models.TextField()),
                ('agent_response', models.TextField(blank=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('visit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='booking_inquiry', to='visits.visit')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VisitSlot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_at', models.DateTimeField()),
                ('end_at', models.DateTimeField()),
                ('capacity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('tour_type', models.CharField(choices=[('onsite', 'On-site Visit'), ('virtual', 'Virtual Tour'), ('hybrid', 'Hybrid (Both)')], default='onsite', max_length=10)),
                ('virtual_tour_url', models.URLField(blank=True)),
                ('meeting_location', models.CharField(blank=True, max_length=500)),
                ('fee_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Optional viewing fee', max_digits=8, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_slots', to=settings.AUTH_USER_MODEL)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visit_slots', to='listings.listing')),
            ],
            options={
                'ordering': ['start_at'],
            },
        ),
        migrations.AddField(
            model_name='visit',
            name='slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='visits.visitslot'),
        ),
        migrations.CreateModel(
            name='VisitReminderTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reminder_type', models.CharField(choices=[('email', 'Email Reminder'), ('sms', 'SMS Reminder'), ('push', 'Push Notification')], default='email', max_length=20)),
                ('scheduled_at', models.DateTimeField(help_text='When this reminder should be sent')),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminder_tasks', to='visits.visit')),
            ],
            options={
                'ordering': ['scheduled_at'],
                'indexes': [models.Index(fields=['reminder_type', 'is_sent'], name='visits_visi_reminde_ed4218_idx'), models.Index(fields=['scheduled_at'], name='visits_visi_schedul_5bb364_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='visitslot',
            index=models.Index(fields=['listing', 'start_at'], name='visits_visi_listing_4cc90a_idx'),
        ),
        migrations.AddIndex(
            model_name='visitslot',
            index=models.Index(fields=['agent', 'start_at'], name='visits_visi_agent_i_8b9c68_idx'),
        ),
        migrations.AddIndex(
            model_name='visitslot',
            index=models.Index(fields=['is_active', 'start_at'], name='visits_visi_is_acti_bc38ab_idx'),
        ),
        migrations.AddIndex(
            model_name='visit',
            index=models.Index(fields=['buyer', 'status'], name='visits_visi_buyer_i_aa3a5f_idx'),
        ),
        migrations.AddIndex(
            model_name='visit',
            index=models.Index(fields=['listing', 'status'], name='visits_visi_listing_216457_idx'),
        ),
        migrations.AddIndex(
            model_name='visit',
            index=models.Index(fields=['slot', 'status'], name='visits_visi_slot_id_386c4b_idx'),
        ),
        migrations.AddIndex(
            model_name='visit',
            index=models.Index(fields=['status', 'created_at'], name='visits_visi_status_e74700_idx'),
        ),
    ]
